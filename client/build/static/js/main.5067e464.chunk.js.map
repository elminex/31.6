{"version":3,"sources":["components/common/Logo/Logo.js","components/layout/MainMenu/MainMenu.js","components/features/NavBar/NavBar.js","components/layout/PageContainer/PageContainer.js","components/layout/MainLayout/MainLayout.js","components/common/PageTitle/PageTitle.js","components/pages/Contact/Contact.js","config.js","redux/postsRedux.js","components/features/PostsCounter/PostsCounter.js","components/features/PostsCounter/PostsCounterContainer.js","components/common/SmallTitle/SmallTitle.js","components/common/HtmlBox/HtmlBox.js","components/features/PostSummary/PostSummary.js","components/features/PostsList/PostsList.js","components/common/Spinner/Spinner.js","components/common/Alert/Alert.js","components/common/Pagination/Pagination.js","components/features/Posts/Posts.js","components/features/Posts/PostsContainer.js","components/pages/Home/Home.js","components/pages/NotFound/NotFound.js","components/pages/PostsPage/PostsPage.js","components/common/TextField/TextField.js","components/common/SectionTitle/SectionTitle.js","components/common/Button/Button.js","components/features/PostForm/PostForm.js","components/features/PostForm/PostFormContainer.js","components/pages/AddPost/AddPost.js","components/pages/EditPost/EditPost.js","components/pages/EditPost/EditPostContainer.js","components/features/Votes/Votes.js","components/features/Votes/VotesContainer.js","components/features/SinglePost/SinglePost.js","components/pages/Post/Post.js","components/pages/Post/PostContainer.js","components/pages/RandomPost/RandomPost.js","components/pages/RandomPost/RandomPostContainer.js","App.js","redux/store.js","index.js"],"names":["Logo","_ref","links","location","react_default","a","createElement","className","MainMenu","map","link","index","key","react_router_dom","pathname","path","to","title","withRouter","props","MainMenu_MainMenu_MainMenu","NavBar","common_Logo_Logo","layout_MainMenu_MainMenu","PageContainer","children","MainLayout","layout_PageContainer_PageContainer","features_NavBar_NavBar","PageTitle","ContactPage","common_PageTitle_PageTitle","BASE_URL","getPost","_ref2","posts","singlePost","getRequest","_ref4","request","getPages","_ref5","Math","ceil","amount","postsPerPage","createActionName","name","concat","START_REQUEST","END_REQUEST","LOAD_POSTS","LOAD_POST","ERROR_REQUEST","RESET_REQUEST","LOAD_POSTS_PAGE","LOAD_VOTE","startRequest","type","endRequest","loadPost","payload","errorRequest","error","resetRequest","loadPostsByPage","initialState","data","presentPage","pending","success","loadPostRequest","id","_ref7","Object","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","res","wrap","_context2","prev","next","axios","get","sent","t0","message","stop","_x2","apply","this","arguments","PostsCounter","number","count","React","Component","connect","state","_ref3","length","SmallTitle","otherProps","objectWithoutProperties","assign","HtmlBox","ReactHtmlParser","PostSummary","content","author","common_SmallTitle_SmallTitle","common_HtmlBox_HtmlBox","text","chars","undefined","cutContent","substr","lastIndexOf","cutText","variant","PostsList","post","features_PostSummary_PostSummary","Spinner","react_animated_css_lib","animationIn","animationOut","Alert","_ref$variant","index_esm","icon","Pagination","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","changePage","newPage","onPageChange","setState","initialPage","_this2","_this$props","pages","show","prevButton","onClick","nextButton","toConsumableArray","Array","el","page","Posts","loadPostsPage","_this$props2","_this$props3","pagination","features_PostsList_PostsList","common_Alert_Alert","common_Spinner_Spinner","common_Pagination_Pagination","defaultProps","_ref10","_callee5","startAt","limit","_context5","_x5","loadPostsByPageRequest","HomePage","PostsCounterContainer","PostsContainer","NotFoundPage","PostsPage","TextField","value","label","onChange","SectionTitle","Button","PostForm","handleChange","bind","assertThisInitialized","handleEditor","addPost","editMode","e","objectSpread","defineProperty","target","editPost","preventDefault","pageContent","onSubmit","common_TextField_TextField","common_SectionTitle_SectionTitle","react_medium_editor_default","tag","options","placeholder","toolbar","buttons","common_Button_Button","_ref8","_callee3","_context3","_x3","addPostRequest","AddPost","PostFormContainer","EditPost","match","useEffect","params","features_PostForm_PostForm","_ref9","_callee4","_context4","_x4","editPostRequest","Votes","editAndLoadVotes","voteHandler","action","newVote","votes","index_es","faThumbsUp","faThumbsDown","vote","_ref12","_callee7","_context7","_x7","editAndLoadVotesRequest","SinglePost","Fragment","VotesContainer","react_facebook_lib","appId","href","faFacebookSquare","SinglePost_SinglePost_SinglePost","Post","features_SinglePost_SinglePost","RandomPost","loadRandomPost","_ref11","_callee6","_context6","_x6","App","layout_MainLayout_MainLayout","react_router","exact","component","Home","Contact","NotFound","rootReducer","combineReducers","statePart","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5067e464.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './Logo.scss';\r\n\r\nconst Logo = ({ links, location }) => (\r\n  <h1 className=\"logo\">Blog.app</h1>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './MainMenu.scss';\r\n\r\nconst MainMenu = ({ links, location }) => (\r\n  <ul className=\"main-menu\">\r\n    { links.map((link, index) =>\r\n      <li key={index}>\r\n        <Link className={(location.pathname === link.path && 'active') || ''} to={link.path}>{link.title}</Link>\r\n      </li>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nMainMenu.propTypes = {\r\n  links: PropTypes.arrayOf(PropTypes.shape({\r\n    path: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n\r\nexport default withRouter(props => <MainMenu {...props}/>);\r\n","import React from 'react';\nimport Logo from '../../common/Logo/Logo';\nimport MainMenu from '../../layout/MainMenu/MainMenu';\nimport './NavBar.scss';\n\nconst NavBar = () => {\n  const links = [\n    {\n      path: '/',\n      title: \"Home\"\n    },\n    {\n      path: '/posts',\n      title: \"Posts\"\n    },\n    {\n      path: '/contact',\n      title: \"Contact\"\n    },\n    {\n      path: '/posts/new',\n      title: \"Add post\"\n    },\n    {\n      path: '/posts/random',\n      title: 'Load random post'\n    }\n  ]\n\nreturn (\n  <nav className=\"navbar\">\n    <Logo />\n    <MainMenu links={links}/>\n  </nav>\n)\n}\n\nexport default NavBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageContainer.scss';\n\nconst PageContainer = ({ children }) => (\n  <div className=\"container-fluid\">\n    {children}\n  </div>\n);\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import React from 'react';\nimport NavBar from '../../features/NavBar/NavBar';\nimport PageContainer from '../PageContainer/PageContainer';\n\nconst MainLayout = ({ children }) => (\n  <PageContainer>\n    <NavBar />\n    {children}\n  </PageContainer>\n)\n\nexport default MainLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageTitle.scss';\n\nconst PageTitle = ({ children }) => (\n  <h1 className=\"page-title\">\n     {children}\n  </h1>\n);\n\nPageTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default PageTitle;\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\n\nconst ContactPage = () => (\n  <div>\n    <PageTitle>Contact Page</PageTitle>\n    <p>\n      Your Favourite Blooger Ltd.<br />\n      9432 Division Street<br />\n      Stone Mountain, GA 30083<br />\n      <br />\n      Mobile Number: 207-914-3411<br />\n    </p>\n  </div>\n)\n\nexport default ContactPage;\n","export const API_URL = '/api';\nexport const BASE_URL = 'https://kodilla-mern-app.herokuapp.com';","import axios from 'axios';\nimport { API_URL } from '../config';\n\n/* SELECTORS */\n\nexport const getPosts = ({ posts }) => posts.data;\nexport const getPost = ({ posts }) => posts.singlePost;\nexport const getPostsCount = ({ posts }) => posts.data.length;\nexport const getRequest = ({ posts }) => posts.request;\nexport const getPages = ({ posts }) => Math.ceil(posts.amount / posts.postsPerPage);\n\n// action name creator\nconst reducerName = 'posts';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* ACTIONS */\n\nexport const START_REQUEST = createActionName('START_REQUEST');\nexport const END_REQUEST = createActionName('END_REQUEST');\nexport const LOAD_POSTS = createActionName('LOAD_POSTS');\nexport const LOAD_POST = createActionName('LOAD_POST');\nexport const ERROR_REQUEST = createActionName('ERROR_REQUEST');\nexport const RESET_REQUEST = createActionName('RESET_REQUEST');\nexport const EDIT_POST = createActionName('EDIT_POST');\nexport const LOAD_POSTS_PAGE = createActionName('LOAD_POSTS_PAGE');\nexport const LOAD_VOTE = createActionName('LOAD_VOTE');\n\nexport const startRequest = () => ({ type: START_REQUEST });\nexport const endRequest = () => ({ type: END_REQUEST });\nexport const loadPosts = payload => ({ payload, type: LOAD_POSTS });\nexport const loadPost = payload => ({ payload, type: LOAD_POST })\nexport const errorRequest = error => ({ error, type: ERROR_REQUEST });\nexport const resetRequest = () => ({ type: RESET_REQUEST });\nexport const loadPostsByPage = payload => ({ payload, type: LOAD_POSTS_PAGE });\nexport const loadVote = payload => ({ payload, type: LOAD_VOTE });\n\n\n/* INITIAL STATE */\n\nconst initialState = {\n  data: [],\n  singlePost: {},\n  amount: 0,\n  postsPerPage: 10,\n  presentPage: 1,\n  request: {\n    pending: false,\n    error: null,\n    success: null,\n  }\n};\n\n/* REDUCER */\n\nexport default function reducer(statePart = initialState, action = {}) {\n  switch (action.type) {\n    case LOAD_POSTS:\n      return { ...statePart, data: action.payload };\n    case LOAD_POST:\n      return { ...statePart, singlePost: action.payload };\n    case START_REQUEST:\n      return { ...statePart, request: { pending: true, error: null, success: null } };\n    case END_REQUEST:\n      return { ...statePart, request: { pending: false, error: null, success: true } };\n    case ERROR_REQUEST:\n      return { ...statePart, request: { pending: false, error: action.error, success: false } };\n    case RESET_REQUEST:\n      return { ...statePart, request: { pending: false, error: null, success: null } };\n    case LOAD_POSTS_PAGE:\n      return {\n        ...statePart,\n        amount: action.payload.amount,\n        postsPerPage: action.payload.postsPerPage,\n        presentPage: action.payload.presentPage,\n        data: [...action.payload.posts]\n      }\n      case LOAD_VOTE: \n      return { ...statePart, singlePost: { ...statePart.singlePost, votes: action.payload }}\n    default:\n      return statePart;\n  }\n};\n\n/* THUNKS */\n\nexport const loadPostsRequest = () => {\n  return async dispatch => {\n    dispatch(startRequest());\n    try {\n      let res = await axios.get(`${API_URL}/posts`);\n      dispatch(loadPosts(res.data));\n      dispatch(endRequest());\n    } catch (e) {\n      dispatch(errorRequest(e.message));\n    }\n  };\n};\n\nexport const loadPostRequest = (id) => {\n  return async dispatch => {\n    dispatch(startRequest());\n    try {\n      let res = await axios.get(`${API_URL}/posts/${id}`);\n      dispatch(loadPost(res.data[0]));\n      dispatch(endRequest());\n    } catch (e) {\n      dispatch(errorRequest(e.message));\n    }\n  };\n};\n\nexport const addPostRequest = (post) => {\n  return async dispatch => {\n    dispatch(startRequest());\n    try {\n      await axios.post(`${API_URL}/posts`, post);\n      dispatch(endRequest());\n    } catch (e) {\n      dispatch(errorRequest(e.message));\n    }\n  };\n};\n\nexport const editPostRequest = (post, id) => {\n  return async dispatch => {\n    dispatch(startRequest());\n    try {\n      await axios.post(`${API_URL}/posts/${id}`, { post: post, id: id });\n      let res = await axios.get(`${API_URL}/posts/${id}`);\n      dispatch(loadPost(res.data[0]));\n      dispatch(endRequest());\n    } catch (e) {\n      dispatch(errorRequest(e.message));\n    }\n  };\n};\n\nexport const loadPostsByPageRequest = (page, postsPerPage) => {\n  return async dispatch => {\n    dispatch(startRequest());\n    try {\n      const startAt = (page - 1) * postsPerPage;\n      const limit = postsPerPage;\n      let res = await axios.get(`${API_URL}/posts/range/${startAt}/${limit}`);\n      const payload = {\n        posts: res.data.posts,\n        amount: res.data.amount,\n        postsPerPage,\n        presentPage: page,\n      };\n      dispatch(loadPostsByPage(payload));\n      dispatch(endRequest());\n    } catch (e) {\n      dispatch(errorRequest(e.message));\n    }\n  };\n};\n\nexport const loadRandomPostRequest = () => {\n  return async dispatch => {\n    dispatch(startRequest());\n    try {\n      let res = await axios.get(`${API_URL}/posts/random`);\n      dispatch(loadPost(res.data));\n      dispatch(endRequest());\n    } catch (e) {\n      dispatch(errorRequest(e.message));\n    }\n  };\n};\n\nexport const editAndLoadVotesRequest = (id, votes) => {\n  return async dispatch => {\n    try {\n      await axios.post(`${API_URL}/posts/votes/${id}`, { votes: votes, id: id });\n      let res = await axios.get(`${API_URL}/posts/${id}`);\n      dispatch(loadVote(res.data[0].votes));\n    } catch (e) {\n      dispatch(errorRequest(e.message));\n    }\n  }\n}","import React from 'react';\n\nclass PostsCounter extends React.Component {\n\n  render() {\n    const { count } = this.props;\n    let number;\n    if (count === 0) {\n      number = 'No posts';\n    } else {\n      number = count;\n    }\n    return (\n      <div>Posts count: {number}</div>\n    );\n  }\n\n};\n\nexport default PostsCounter;","import { connect } from 'react-redux';\nimport { getPostsCount } from '../../../redux/postsRedux';\nimport PostsCounter from './PostsCounter';\n\nconst mapStateToProps = state => ({\n  count: getPostsCount(state),\n})\n\nexport default connect(mapStateToProps)(PostsCounter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SmallTitle.scss';\n\nconst SmallTitle = ({ children, ...otherProps }) => (\n  <h2 {...otherProps} className=\"small-title\">\n    { children }\n  </h2>\n);\n\nSmallTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default SmallTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactHtmlParser from 'react-html-parser';\n\nconst HtmlBox = ({ children, ...otherProps }) => (\n  <p {...otherProps} className=\"html-box\">\n    {ReactHtmlParser(children)}\n  </p>\n);\n\nHtmlBox.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default HtmlBox;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { PropTypes } from 'prop-types';\nimport './PostSummary.scss';\nimport '../../common/Button/Button.scss';\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\n\nconst PostSummary = ({ id, title, content, author }) => (\n\n  <article className=\"post-summary\" >\n    <SmallTitle>{title}</SmallTitle>\n    <span>Author: {author}</span>\n    <HtmlBox>{cutText(content)}</HtmlBox>\n    <Link className=\"button button--primary\" variant=\"primary\" to={`/posts/${id}`}>\n      Read more\n    </Link>\n    <Link className=\"button button--primary\" variant=\"primary\" to={`/posts/edit/${id}`}>\n      Edit post\n    </Link>\n  </article >\n);\n\nfunction cutText(text, chars = 250) {\n  if (chars < 1) {\n    return \"error\";\n  } else if (text.length > chars) {\n    const cutContent = text.substr(0, text.lastIndexOf(' ', chars)) + ' ...';\n    return cutContent;\n  } else {\n    return text;\n  }\n}\n\nPostSummary.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n  content: PropTypes.string,\n  author: PropTypes.string\n};\n\nexport default PostSummary;","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport PostSummary from '../PostSummary/PostSummary';\n\nconst PostsList = ({ posts }) => (\n  <div>\n    <section className=\"posts-list\">\n      {posts.map(post => <PostSummary key={post.id} {...post} />)}\n    </section>\n  </div>\n);\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired\n    })\n  ),\n};\n\nexport default PostsList;","import React from 'react';\nimport { Animated } from 'react-animated-css';\n\nimport './Spinner.scss';\n\nconst Spinner = () => (\n  <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\n    <div className=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </Animated>\n);\n\nexport default Spinner;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Animated } from 'react-animated-css';\r\nimport { MdInfoOutline, MdDone, MdErrorOutline } from 'react-icons/md';\r\n\r\nimport './Alert.scss';\r\n\r\nconst Alert = ({ variant = '', children, ...otherProps }) => {\r\n\r\n  const icon = () => {\r\n    switch(variant) {\r\n      case 'info':\r\n        return <MdInfoOutline />\r\n      case 'success':\r\n        return <MdDone />\r\n      case 'warning':\r\n        return <MdErrorOutline />\r\n      case 'error':\r\n        return <MdErrorOutline />\r\n      default:\r\n        return <MdInfoOutline />\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n      <div {...otherProps} className={`alert alert--${variant}`}>\r\n        {icon()}\r\n        <span className=\"alert__desc\">{children}</span>\r\n      </div>\r\n    </Animated>\r\n  )\r\n\r\n};\r\n\r\nAlert.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Pagination.scss';\n\nclass Pagination extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      presentPage: this.props.initialPage || 1,\n    }\n  }\n\n  changePage = (newPage) => {\n    const { onPageChange } = this.props;\n    this.setState({ presentPage: newPage });\n    onPageChange(newPage);\n  }\n\n  render() {\n    const { pages, show } = this.props;\n    const { presentPage } = this.state;\n    const prevButton = <li className=\"pagination__list__item\" onClick={() => this.changePage(presentPage - 1)}>&lt;</li>\n    const nextButton = <li className=\"pagination__list__item\" onClick={() => this.changePage(presentPage + 1)}>&gt;</li>\n    if (!show) { return null }\n      return (\n        <div className=\"pagination\">\n          <ul className=\"pagination__list\"> \n            {(presentPage > 1) ? prevButton : ''}\n            {[...Array(pages)].map((el, page) =>\n              <li\n                key={++page}\n                onClick={() => { this.changePage(page) }}\n                className={`pagination__list__item${((page) === presentPage) ? ' pagination__list__item--active' : ''}`}>\n                {page}\n              </li>\n            )}\n            {(presentPage === pages && pages !== 0) ? '' : nextButton}\n          </ul  >\n        </div>\n      );\n    \n  }\n}\n\nPagination.propTypes = {\n  pages: PropTypes.number.isRequired,\n  initialPage: PropTypes.number,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport PostsList from '../PostsList/PostsList';\nimport Spinner from '../../common/Spinner/Spinner';\nimport Alert from '../../common/Alert/Alert';\nimport Pagination from '../../common/Pagination/Pagination';\n\nclass Posts extends React.Component {\n\n  componentDidMount() {\n    const { loadPostsByPage, initialPage, postsPerPage } = this.props;\n    loadPostsByPage(initialPage, postsPerPage);\n  }\n\n  componentWillUnmount() {\n    const { resetRequest } = this.props;\n    resetRequest();\n  }\n\n  loadPostsPage = (page) => {\n    const { loadPostsByPage, postsPerPage } = this.props;\n    loadPostsByPage(page, postsPerPage);  \n  }\n\n  render() {\n    const { posts, request, pages, pagination, initialPage } = this.props;\n    let content;\n\n    switch (true) {\n      case (!request.pending && request.success && (posts.length > 0)):\n        content = <PostsList posts={posts} />;\n        break;\n      case (!request.pending && request.error):\n        content = <Alert variant=\"error\">{request.error}</Alert>;\n        break;\n      case (!request.pending && request.success && (posts.length === 0)):\n        content = <Alert variant=\"info\">No posts</Alert>\n        break;\n      default:\n        content = <Spinner />\n    }\n    return (\n      <div>\n        {content}\n        {pagination ? <Pagination pages={pages} onPageChange={this.loadPostsPage} show={request.success} initialPage={initialPage} /> : ''}\n      </div>\n    );\n  }\n};\n\nPosts.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired\n    })\n  ),\n  resetRequest: PropTypes.func.isRequired,\n  loadPostsByPage: PropTypes.func.isRequired,\n};\n\nPosts.defaultProps = {\n  initialPage: 1,\n  postsPerPage: 10,\n  pagination: true,\n}\n\nexport default Posts;","import { connect } from 'react-redux';\nimport { getPosts, getRequest, getPages, loadPostsByPageRequest, resetRequest } from '../../../redux/postsRedux';\nimport Posts from './Posts';\n\nconst mapStateToProps = state => ({\n  posts: getPosts(state),\n  request: getRequest(state),\n  pages: getPages(state),\n\n})\n\nconst mapDispatchToProps = dispatch => ({\n  resetRequest: () => dispatch(resetRequest()),\n  loadPostsByPage: (page, postsPerPage) => dispatch(loadPostsByPageRequest(page, postsPerPage)),\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport PostsCounter from '../../features/PostsCounter/PostsCounterContainer';\nimport Posts from '../../features/Posts/PostsContainer';\n\nconst HomePage = () => (\n  <div>\n    <PageTitle>Blog</PageTitle>\n    <PostsCounter />\n    <Posts postsPerPage={3} pagination={false} />\n  </div>\n);\n\nexport default HomePage;\n","import React from 'react';\n\nconst NotFoundPage = () => (\n  <div>\n    <h1>404 Not Found</h1>\n  </div>\n)\n\nexport default NotFoundPage;\n","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport PostsCounter from '../../features/PostsCounter/PostsCounterContainer';\nimport Posts from '../../features/Posts/PostsContainer';\n\nconst PostsPage = () => (\n  <div>\n    <PageTitle>Posts List</PageTitle>\n    <PostsCounter />\n    <Posts />\n  </div>\n)\n\nexport default PostsPage;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TextField.scss';\r\n\r\nconst TextField = ({ value, label, onChange, ...otherProps }) => (\r\n  <label className=\"text-field\">\r\n    <span className={`text-field__label ${(!value.length > 0) ? 'text-field__label--big' : ''}`}>{label}</span>\r\n    <input {...otherProps} value={value} onChange={onChange} className=\"text-field__input\" />\r\n  </label>\r\n);\r\n\r\nTextField.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TextField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SectionTitle.scss';\r\n\r\nconst SectionTitle = ({ children }) => (\r\n  <h2 className=\"section-title\">\r\n     {children}\r\n  </h2>\r\n);\r\n\r\nSectionTitle.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default SectionTitle;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({ variant = '', children, ...otherProps }) => (\r\n  <button { ...otherProps } className={ `button button--${variant}`}>\r\n    { children }\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\nimport TextField from '../../common/TextField/TextField';\nimport SectionTitle from '../../common/SectionTitle/SectionTitle';\nimport Button from '../../common/Button/Button';\nimport Editor from 'react-medium-editor';\nimport Alert from '../../common/Alert/Alert';\nimport Spinner from '../../common/Spinner/Spinner';\nimport 'medium-editor/dist/css/medium-editor.css';\nimport 'medium-editor/dist/css/themes/default.css';\nimport './PostForm.scss';\n\nclass PostForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: {\n        title: '',\n        author: '',\n        content: '',\n      }\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEditor = this.handleEditor.bind(this);\n    this.addPost = this.addPost.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.editMode) {\n      this.setState({\n        post: {\n          title: this.props.singlePost.title,\n          author: this.props.singlePost.author,\n          content: this.props.singlePost.content,\n        }\n      })\n    }\n  }\n\ncomponentWillUnmount() {\n  const { resetRequest } = this.props;\n  resetRequest();\n}\n\nhandleChange(e) {\n  const { post } = this.state;\n  this.setState({ post: { ...post, [e.target.name]: e.target.value } });\n}\n\nhandleEditor(text) {\n  const { post } = this.state;\n  this.setState({ post: { ...post, content: text } });\n}\n\naddPost(e) {\n  const { post } = this.state;\n  const { addPost, editPost, editMode, id } = this.props;\n  e.preventDefault();\n  editMode ? editPost(post, id) : addPost(post);\n}\n\nrender() {\n  const { post } = this.state;\n  const { request, editMode } = this.props;\n  let pageContent;\n  switch (true) {\n    case (request.success):\n      pageContent = <Alert variant=\"success\">Post has been added!</Alert>;\n      break;\n    case (request.error):\n      pageContent = <Alert variant=\"error\">{request.error}</Alert>;\n      break;\n    case (request.pending):\n      pageContent = <Spinner />\n      break;\n    default:\n      pageContent = (\n        <form onSubmit={this.addPost}>\n          <TextField\n            value={post.title}\n            label='Title'\n            onChange={this.handleChange}\n            name='title'\n          />\n          <TextField\n            value={post.author}\n            label='Author'\n            onChange={this.handleChange}\n            name='author'\n          />\n          <SectionTitle>Post content</SectionTitle>\n          <Editor\n            className=\"content-editor\"\n            tag=\"pre\"\n            text={post.content}\n            onChange={this.handleEditor}\n            options={{ placeholder: false, toolbar: { buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3'] } }}\n          />\n\n          {editMode ? <Button variant=\"primary\">Edit post</Button> : <Button variant=\"primary\">Add Post</Button>}\n        </form>\n      )\n  }\n  return pageContent;\n}\n}\n\nexport default PostForm;\n","import { connect } from 'react-redux';\nimport { getRequest, addPostRequest, resetRequest } from '../../../redux/postsRedux';\nimport PostForm from './PostForm';\n\nconst mapStateToProps = state => ({\n  request: getRequest(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  addPost: (post) => dispatch(addPostRequest(post)),\n  resetRequest: () => dispatch(resetRequest())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);\n  ","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport PostForm from '../../features/PostForm/PostFormContainer';\n\nconst AddPost = () => (\n  <div>\n    <PageTitle>Add Post</PageTitle>\n    <PostForm />\n  </div>\n);\n\nexport default AddPost;\n","import React, { useEffect } from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport PostForm from '../../features/PostForm/PostForm';\nimport Spinner from '../../common/Spinner/Spinner';\nimport Alert from '../../common/Alert/Alert';\n\nconst EditPost = ({ match, resetRequest, editPost, loadPost, request, singlePost }) => {\n\n  useEffect(() => {\n    loadPost(match.params.id);\n    return () => resetRequest();\n  }, [loadPost, match, resetRequest]);\n\n  let pageContent;\n  const fakeRequest = { success: null, pending: null, error: null };\n  \n  switch (true) {\n    case (request.success):\n      pageContent = <PostForm\n        editMode={true}\n        request={fakeRequest}\n        editPost={editPost}\n        singlePost={singlePost}\n        resetRequest={resetRequest}\n        id={match.params.id} />\n      break;\n    case (request.error):\n      pageContent = <Alert variant=\"error\">{request.error}</Alert>;\n      break;\n    default:\n      pageContent = <Spinner />\n  }\n  \n  return (\n    <div>\n      <PageTitle>Edit Post</PageTitle>\n      {pageContent}\n    </div>\n  );\n}\nexport default EditPost;\n","import { connect } from 'react-redux';\nimport { getRequest, editPostRequest, getPost, resetRequest, loadPostRequest } from '../../../redux/postsRedux';\nimport EditPost from './EditPost';\nimport {withRouter} from 'react-router-dom';\n\n\nconst mapStateToProps = state => ({\n  request: getRequest(state),\n  singlePost: getPost(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  loadPost: id => dispatch(loadPostRequest(id)),\n  editPost: (post, id) => dispatch(editPostRequest(post, id)),\n  resetRequest: () => dispatch(resetRequest())\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditPost));\n  ","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThumbsDown, faThumbsUp } from '@fortawesome/free-solid-svg-icons';\nimport './Votes.scss';\n\nconst Votes = ({ editAndLoadVotes, id, singlePost }) => {\n  const voteHandler = (action) => {\n    let newVote = singlePost.votes;\n    if (action === \"up\") {\n      newVote += 1;\n    } else {\n      newVote -= 1;\n    }\n    editAndLoadVotes(id, newVote);\n  }\n\n  return (\n    <div className=\"votes\">\n      <button className=\"btn-thumb btn-thumb-up\" onClick={() => voteHandler(\"up\")}>\n        <FontAwesomeIcon icon={faThumbsUp} />\n      </button>\n      Votes: {singlePost.votes}\n      <button className=\"btn-thumb btn-thumb-down\" onClick={() => voteHandler(\"down\")}>\n        <FontAwesomeIcon icon={faThumbsDown} />\n      </button>\n    </div>\n  )\n};\n\nexport default Votes;\n","import { connect } from 'react-redux';\nimport { getRequest, getPost, resetRequest, editAndLoadVotesRequest } from '../../../redux/postsRedux';\nimport Votes from './Votes';\n\nconst mapStateToProps = state => ({\n  singlePost: getPost(state),\n  request: getRequest(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  editAndLoadVotes: (id, vote) => dispatch(editAndLoadVotesRequest(id, vote)),\n  resetRequest: () => dispatch(resetRequest())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Votes);\n  ","import React from 'react';\nimport PageTitle from '../../common/PageTitle/PageTitle';\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\nimport { withRouter } from 'react-router-dom';\nimport { FacebookProvider, Comments, ShareButton } from 'react-facebook';\nimport { PropTypes } from 'prop-types'\nimport { BASE_URL } from '../../../config';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFacebookSquare } from '@fortawesome/free-brands-svg-icons';\nimport './SinglePost.scss';\nimport Votes from '../../features/Votes/VotesContainer';\n\nconst SinglePost = ({ post, location }) => (\n  <>\n    <PageTitle>{post.title}</PageTitle>\n    <span>Author: {post.author}</span>\n    <HtmlBox>{post.content}</HtmlBox>\n    <Votes id={post.id} singlePost={post}/>\n    <FacebookProvider appId=\"1211874079019883\">\n      <ShareButton className=\"fb-share-button\" href={`${BASE_URL}${location.pathname}`}>\n        <FontAwesomeIcon icon={faFacebookSquare} className=\"fb-icon\" />\n        Share on Facebook\n      </ShareButton>\n      <Comments href={`${BASE_URL}${location.pathname}`} />\n    </FacebookProvider>\n  </>\n);\n\nSinglePost.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.string,\n    votes: PropTypes.number,\n    title: PropTypes.string,\n    content: PropTypes.string,\n    author: PropTypes.string\n  })\n};\n\nexport default withRouter(props => <SinglePost {...props} />);","import React, { useEffect } from 'react';\nimport Spinner from '../../common/Spinner/Spinner';\nimport Alert from '../../common/Alert/Alert';\nimport SinglePost from '../../features/SinglePost/SinglePost';\nimport PropTypes from 'prop-types';\n\nconst Post = ({ loadPost, match, singlePost, request, resetRequest }) => {\n\n  useEffect(() => {\n    loadPost(match.params.id);\n    return () => resetRequest();\n  }, [loadPost, match, resetRequest]);\n\n  let content;\n  switch (true) {\n    case (request.success && !request.pending):\n      content = <SinglePost post={singlePost} />;\n      break;\n    case (!request.pending && request.error):\n      content = <Alert variant=\"error\">{request.error}</Alert>;\n      break;\n    case (!request.pending && request.success && !singlePost):\n      content = <Alert variant=\"error\">Wygląda na to, że nic tu nie ma</Alert>;\n      break;\n    default:\n      content = <Spinner />\n  }\n\n  return (\n    <div>\n      {content}\n    </div>\n  )\n}\n  \nPost.propTypes = {\n  singlePost: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    content: PropTypes.string,\n  }),\n  loadPost: PropTypes.func.isRequired,\n};\n\nexport default Post;\n","import { connect } from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport { getPost, getRequest, loadPostRequest, resetRequest } from '../../../redux/postsRedux';\nimport Post from './Post';\n\nconst mapStateToProps = state => ({\n  singlePost: getPost(state),\n  request: getRequest(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  loadPost: (id) => dispatch(loadPostRequest(id)),\n  resetRequest: () => dispatch(resetRequest())\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Post));\n","import React, { useEffect } from 'react';\nimport Spinner from '../../common/Spinner/Spinner';\nimport Alert from '../../common/Alert/Alert';\nimport SinglePost from '../../features/SinglePost/SinglePost';\nimport PropTypes from 'prop-types';\n\nconst RandomPost = ({ loadRandomPost, singlePost, request, resetRequest }) => {\n\n  useEffect(() => {\n    loadRandomPost();\n    return () => resetRequest();\n  }, [loadRandomPost, resetRequest]);\n\n  let content;\n  switch (true) {\n    case (request.success && !request.pending):\n      content = <SinglePost post={singlePost} />;\n      break;\n    case (!request.pending && request.error):\n      content = <Alert variant=\"error\">{request.error}</Alert>;\n      break;\n    case (!request.pending && request.success && !singlePost):\n      content = <Alert variant=\"error\">Wygląda na to, że nic tu nie ma</Alert>;\n      break;\n    default:\n      content = <Spinner />\n  }\n\n  return (\n    <div>\n      {content}\n    </div>\n  )\n}\n\nRandomPost.propTypes = {\n  singlePost: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    content: PropTypes.string,\n  }),\n  loadRandomPost: PropTypes.func.isRequired,\n};\n\nexport default RandomPost;\n","import { connect } from 'react-redux';\nimport { getPost, getRequest, loadRandomPostRequest, resetRequest } from '../../../redux/postsRedux';\nimport RandomPost from './RandomPost';\n\nconst mapStateToProps = state => ({\n  singlePost: getPost(state),\n  request: getRequest(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  loadRandomPost: () => dispatch(loadRandomPostRequest()),\n  resetRequest: () => dispatch(resetRequest())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RandomPost);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport MainLayout from './components/layout/MainLayout/MainLayout';\nimport Contact from './components/pages/Contact/Contact';\nimport Home from './components/pages/Home/Home';\nimport NotFound from './components/pages/NotFound/NotFound';\nimport PostsPage from './components/pages/PostsPage/PostsPage';\nimport AddPost from './components/pages/AddPost/AddPost';\nimport EditPost from './components/pages/EditPost/EditPostContainer';\nimport Post from './components/pages/Post/PostContainer';\nimport RandomPost from './components/pages/RandomPost/RandomPostContainer';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n    }\n  }\n\n  render() {\n    return (\n      <MainLayout>\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/contact' exact component={Contact} />\n          <Route path='/posts' exact component={PostsPage} />\n          <Route path='/posts/new' exact component={AddPost} />\n          <Route path='/posts/edit/:id' component={EditPost} />\n          <Route path='/posts/random' component={RandomPost} />\n          <Route path='/posts/:id' component={Post} />\n          <Route component={NotFound} />\n        </Switch>\n      </MainLayout>\n    );\n  }\n};\n\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport posts from './postsRedux';\nimport thunk from 'redux-thunk'\n\nconst rootReducer = combineReducers({\n  posts\n});\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/global.scss';\nimport 'animate.css/animate.min.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App /> \n    </Router>\n  </Provider>\n)\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}